{"ast":null,"code":"var _jsxFileName = \"/Users/chanho/Documents/GitHub/info30005-pear-frontend/src/pages/Chat.js\";\n// Import necessary libraries\nimport React, { useState } from \"react\";\nimport Messages from '../components/chat/Messages';\nimport \"../css/chatStyles.css\";\nimport { NavLink } from \"react-router-dom\";\nimport { addMessage, getMessages, useMessages } from \"../api.js\";\nexport default function Chat(data) {\n  //conversationId is hardcoded as this page is not fully finished\n  data = {\n    conversationId: \"5eae207c2630d000173c63d6\"\n  };\n  var {\n    loading,\n    messages,\n    error\n  } = useMessages(data);\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 14\n      }\n    }, \"Loading...\");\n  }\n\n  if (error) {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 14\n      }\n    }, \"Something went wrong: \", error.message);\n  }\n\n  console.log(messages);\n  const topicImage = sessionStorage.getItem('currentTopicImage');\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"message-heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, \"Chat (Not Fully Implemented)\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"grid-item user-display\",\n    style: {\n      backgroundImage: `url(https://res.cloudinary.com/drvfo389c/image/upload/v1589694061/pear/profile_hdtz1k.png)`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, \"Talking to:\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"grid-item message-display\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, messages.map(messages => /*#__PURE__*/React.createElement(Message, Object.assign({\n    key: messages.text\n  }, messages, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"grid-item topic-display\",\n    style: {\n      backgroundImage: `url(${topicImage})`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, \"Talking about:\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"grid-item message-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(MessageForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }))));\n}\n\nfunction MessageForm() {\n  //assign the proper inputs from form\n  const [conversationId, setConversatioId] = useState(\"\");\n  const [senderId, setSenderId] = useState(\"\");\n  const [text, setText] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n  const [video, setVideo] = useState(\"\"); //on submit, add message to mongoDB database\n\n  function onSubmit() {\n    addMessage({\n      conversationId,\n      senderId,\n      text,\n      image,\n      video\n    });\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatBox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, \"Write message: \"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"message\",\n    placeholder: \"Type your message\",\n    value: text,\n    onChange: event => {\n      setText(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 14\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Send\",\n    id: \"btn\",\n    onClick: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  })));\n}\n/* This function is created to display all messages from a specific conversation stored in the mongoDb\n   database. However, as this section of the code is not yet fully implemented, conversation is still \n   hardcoded.\n*/\n\n\nfunction Message(message) {\n  const {\n    _id,\n    conversationId,\n    senderId,\n    text,\n    image,\n    video,\n    timeSent\n  } = message;\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: \"join\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `chat-room conversation-${text}`,\n    key: text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }\n  }), senderId, \":\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  }), text)));\n}","map":{"version":3,"sources":["/Users/chanho/Documents/GitHub/info30005-pear-frontend/src/pages/Chat.js"],"names":["React","useState","Messages","NavLink","addMessage","getMessages","useMessages","Chat","data","conversationId","loading","messages","error","message","console","log","topicImage","sessionStorage","getItem","backgroundImage","map","text","MessageForm","setConversatioId","senderId","setSenderId","setText","image","setImage","video","setVideo","onSubmit","handleSubmit","event","preventDefault","target","value","Message","_id","timeSent"],"mappings":"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","sourcesContent":["// Import necessary libraries\nimport React, { useState } from \"react\";\nimport Messages from '../components/chat/Messages';\nimport \"../css/chatStyles.css\";\nimport { NavLink } from \"react-router-dom\";\nimport { addMessage, getMessages, useMessages} from \"../api.js\";\n\n\nexport default function Chat(data) {\n  //conversationId is hardcoded as this page is not fully finished\n  data = {conversationId: \"5eae207c2630d000173c63d6\"}\n  var { loading, messages, error } = useMessages(data);\n    if (loading) {\n      return <p>Loading...</p>;\n    }\n    if (error) {\n      return <p>Something went wrong: {error.message}</p>;\n    }\n\n    console.log(messages);\n\n    const topicImage = sessionStorage.getItem('currentTopicImage');\n  \n    return (\n      <div>\n        <div className = \"message-heading\">\n          Chat (Not Fully Implemented)\n        </div>\n        <div className = \"chat-page\">\n          \n          \n          <div className = \"grid-item user-display\" style={{backgroundImage: `url(https://res.cloudinary.com/drvfo389c/image/upload/v1589694061/pear/profile_hdtz1k.png)`}}>\n            Talking to:\n          </div>\n          \n          \n          <div className = \"grid-item message-display\">\n            {messages.map(messages => (\n              <Message key={messages.text} {...messages} />\n            ))}\n          </div>\n          \n          \n          <div className = \"grid-item topic-display\" style={{backgroundImage: `url(${topicImage})`}}>\n            Talking about:\n          </div>\n          \n          \n          <div className = \"grid-item message-form\">\n            <MessageForm />\n          </div>\n\n        </div>\n      </div>\n  );\n}\n\n\nfunction MessageForm() {\n   //assign the proper inputs from form\n   const [conversationId, setConversatioId] = useState(\"\");\n   const [senderId, setSenderId] = useState(\"\");\n   const [text, setText] = useState(\"\");\n   const [image, setImage] = useState(\"\");\n   const [video, setVideo] = useState(\"\");\n  \n  //on submit, add message to mongoDB database\n  function onSubmit() {\n    addMessage({\n      conversationId,\n      senderId, \n      text,\n      image,\n      video\n\n    });\n}\n  function handleSubmit(event){\n    event.preventDefault();\n  }\n\n  return (\n    <div className = \"chatBox\">\n      <h1>Write message: </h1>\n      <form onSubmit={handleSubmit}>\n        {/* <label for=\"message\">Write a message</label> */}\n          <input \n            type=\"text\" \n            name=\"message\"\n            placeholder=\"Type your message\"\n            value={text}  \n            onChange={event => {\n              setText(event.target.value);\n            }}\n            \n          /> <br />\n      \n        <input type=\"submit\" value=\"Send\" id='btn' onClick={onSubmit}/>\n      </form> \n    </div>\n  );\n}\n  \n  /* This function is created to display all messages from a specific conversation stored in the mongoDb\n     database. However, as this section of the code is not yet fully implemented, conversation is still \n     hardcoded.\n  */\n  function Message(message) {\n    const {_id, conversationId, senderId, text, image, video, timeSent} = message;\n    \n    return (\n      <section className='join'>\n          <div className={`chat-room conversation-${text}`}  key={text}>\n            <div>\n                <br></br>\n                  {senderId}:\n                <br></br>\n                {text}\n            </div>\n         </div>\n      </section>\n  );\n }\n"]},"metadata":{},"sourceType":"module"}